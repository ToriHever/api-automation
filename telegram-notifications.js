// telegram-notifications.js - –ú–æ–¥—É–ª—å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ Telegram
import axios from 'axios';

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
 * @param {string} message - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 * @param {boolean} silent - –¢–∏—Ö–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ (–±–µ–∑ –∑–≤—É–∫–∞)
 */
export async function sendTelegramNotification(message, silent = false) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if (!process.env.TELEGRAM_BOT_TOKEN || !process.env.TELEGRAM_CHAT_ID) {
        console.log('‚ö†Ô∏è Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã (–Ω–µ—Ç —Ç–æ–∫–µ–Ω–∞ –∏–ª–∏ chat_id)');
        return false;
    }

    try {
        const telegramApiUrl = `https://api.telegram.org/bot${process.env.TELEGRAM_BOT_TOKEN}/sendMessage`;
        
        const payload = {
            chat_id: process.env.TELEGRAM_CHAT_ID,
            text: message,
            parse_mode: 'HTML', // –ü–æ–¥–¥–µ—Ä–∂–∫–∞ HTML —Ä–∞–∑–º–µ—Ç–∫–∏
            disable_notification: silent
        };

        const response = await axios.post(telegramApiUrl, payload, {
            timeout: 10000 // 10 —Å–µ–∫—É–Ω–¥ —Ç–∞–π–º–∞—É—Ç
        });

        if (response.data.ok) {
            console.log('üì± Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ');
            return true;
        } else {
            console.error('‚ùå –û—à–∏–±–∫–∞ Telegram API:', response.data.description);
            return false;
        }

    } catch (error) {
        if (error.response) {
            console.error(`‚ùå Telegram API –æ—à–∏–±–∫–∞: ${error.response.status} - ${error.response.data?.description || error.response.statusText}`);
        } else {
            console.error(`‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: ${error.message}`);
        }
        return false;
    }
}

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–∞—á–∞–ª–µ —Ä–∞–±–æ—Ç—ã
 */
export async function sendStartNotification(dateRange) {
    const message = `
üöÄ <b>–ó–∞–ø—É—Å–∫ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö</b>
üìÖ –ü–µ—Ä–∏–æ–¥: ${dateRange}
üïê –í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU', { timeZone: 'Europe/Moscow' })}
‚è≥ –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è...
    `.trim();

    return await sendTelegramNotification(message, true); // –¢–∏—Ö–æ
}

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± —É—Å–ø–µ—à–Ω–æ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
 */
export async function sendSuccessNotification(stats) {
    let projectStatsText = '';
    if (stats.projectStats && stats.projectStats.length > 0) {
        projectStatsText = '\n\nüìà –ü–æ –ø—Ä–æ–µ–∫—Ç–∞–º:\n' + 
            stats.projectStats.map(p => `‚Ä¢ ${p.name}: ${p.records} –∑–∞–ø–∏—Å–µ–π`).join('\n');
    }

    const message = `
‚úÖ <b>–°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω</b>
üìÖ –î–∞—Ç–∞: ${stats.date}
üìä –ó–∞–ø–∏—Å–µ–π –¥–æ–±–∞–≤–ª–µ–Ω–æ: <code>${stats.totalRecords}</code>
‚è±Ô∏è –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${stats.duration} —Å–µ–∫.${projectStatsText}
    `.trim();

    return await sendTelegramNotification(message);
}

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ
 */
export async function sendErrorNotification(error, context) {
    const message = `
‚ùå <b>–û—à–∏–±–∫–∞ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö</b>
üìÖ –î–∞—Ç–∞: ${context.date}
üïê –í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU', { timeZone: 'Europe/Moscow' })}

üîç –û—à–∏–±–∫–∞: <code>${error.message}</code>
üìç –ö–æ–Ω—Ç–µ–∫—Å—Ç: ${context.step || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}

‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤
    `.trim();

    return await sendTelegramNotification(message);
}

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø—É—Å—Ç—ã—Ö –¥–∞–Ω–Ω—ã—Ö
 */
export async function sendEmptyDataNotification(dateRange) {
    const message = `
‚ö†Ô∏è <b>–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∑–∞–ø–∏—Å–∏</b>
üìÖ –ü–µ—Ä–∏–æ–¥: ${dateRange}
üïê –í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU', { timeZone: 'Europe/Moscow' })}

üîç –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:
‚Ä¢ API –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∑–∞ —ç—Ç—É –¥–∞—Ç—É
‚Ä¢ –ù–µ—Ç –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
‚Ä¢ –î–∞–Ω–Ω—ã–µ –µ—â–µ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã –≤ TopVisor

üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é –¥–∞—Ç—É
    `.trim();

    return await sendTelegramNotification(message);
}

/**
 * –¢–µ—Å—Ç–æ–≤–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫
 */
export async function sendTestNotification() {
    const message = `
üß™ <b>–¢–µ—Å—Ç Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</b>
üïê ${new Date().toLocaleString('ru-RU', { timeZone: 'Europe/Moscow' })}

‚úÖ Telegram –±–æ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ!
üì± –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –≤ —ç—Ç–æ—Ç —á–∞—Ç.
    `.trim();

    return await sendTelegramNotification(message);
}