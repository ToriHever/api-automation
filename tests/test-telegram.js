// test-telegram.js - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
import dotenv from 'dotenv';
import { 
    sendTestNotification,
    sendStartNotification, 
    sendSuccessNotification, 
    sendErrorNotification,
    sendEmptyDataNotification 
} from './telegram-notifications.js';

dotenv.config();

console.log('üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï TELEGRAM –£–í–ï–î–û–ú–õ–ï–ù–ò–ô');
console.log('=====================================\n');

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫:');
if (!process.env.TELEGRAM_BOT_TOKEN) {
    console.log('‚ùå TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ .env');
    process.exit(1);
}

if (!process.env.TELEGRAM_CHAT_ID) {
    console.log('‚ùå TELEGRAM_CHAT_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ .env');
    process.exit(1);
}

console.log('‚úÖ TELEGRAM_BOT_TOKEN: —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
console.log('‚úÖ TELEGRAM_CHAT_ID: —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
console.log('üì± –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π...\n');

// –§—É–Ω–∫—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏
const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms));

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
async function runTests() {
    try {
        // –¢–µ—Å—Ç 1: –ë–∞–∑–æ–≤–æ–µ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        console.log('üì§ –¢–µ—Å—Ç 1: –ë–∞–∑–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ');
        const test1 = await sendTestNotification();
        console.log(test1 ? '‚úÖ –£—Å–ø–µ—Ö' : '‚ùå –û—à–∏–±–∫–∞');
        await delay(2000);

        // –¢–µ—Å—Ç 2: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ —Ä–∞–±–æ—Ç—ã
        console.log('üì§ –¢–µ—Å—Ç 2: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å—Ç–∞—Ä—Ç–µ');
        const test2 = await sendStartNotification('2025-09-19 - 2025-09-19');
        console.log(test2 ? '‚úÖ –£—Å–ø–µ—Ö' : '‚ùå –û—à–∏–±–∫–∞');
        await delay(2000);

        // –¢–µ—Å—Ç 3: –£—Å–ø–µ—à–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
        console.log('üì§ –¢–µ—Å—Ç 3: –£—Å–ø–µ—à–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ');
        const test3 = await sendSuccessNotification({
            date: '2025-09-19',
            totalRecords: 1247,
            duration: 45,
            projectStats: [
                { name: 'RU —Å–∞–π—Ç', records: 423 },
                { name: 'EN —Å–∞–π—Ç', records: 298 },
                { name: '–ë–ª–æ–≥', records: 312 },
                { name: '–¢–µ—Ä–º–∏–Ω—ã', records: 214 }
            ]
        });
        console.log(test3 ? '‚úÖ –£—Å–ø–µ—Ö' : '‚ùå –û—à–∏–±–∫–∞');
        await delay(2000);

        // –¢–µ—Å—Ç 4: –û—à–∏–±–∫–∞
        console.log('üì§ –¢–µ—Å—Ç 4: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ');
        const testError = new Error('–¢–µ—Å—Ç–æ–≤–∞—è –æ—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è');
        const test4 = await sendErrorNotification(testError, {
            date: '2025-09-19',
            step: 'API –∑–∞–ø—Ä–æ—Å',
            duration: 15
        });
        console.log(test4 ? '‚úÖ –£—Å–ø–µ—Ö' : '‚ùå –û—à–∏–±–∫–∞');
        await delay(2000);

        // –¢–µ—Å—Ç 5: –ü—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ
        console.log('üì§ –¢–µ—Å—Ç 5: –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö');
        const test5 = await sendEmptyDataNotification('2025-09-19 - 2025-09-19');
        console.log(test5 ? '‚úÖ –£—Å–ø–µ—Ö' : '‚ùå –û—à–∏–±–∫–∞');

        console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!');
        console.log('üí¨ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à Telegram —á–∞—Ç - –¥–æ–ª–∂–Ω–æ –ø—Ä–∏–π—Ç–∏ 5 —Å–æ–æ–±—â–µ–Ω–∏–π');
        
        // –ü–æ–¥—Å—á–µ—Ç —É—Å–ø–µ—à–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤
        const results = [test1, test2, test3, test4, test5];
        const successCount = results.filter(r => r).length;
        
        console.log(`üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: ${successCount}/5 —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ`);
        
        if (successCount === 5) {
            console.log('‚úÖ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
        } else {
            console.log('‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –Ω–µ–∫–æ—Ç–æ—Ä—ã–º–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏');
        }

    } catch (error) {
        console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message);
    }
}

runTests();